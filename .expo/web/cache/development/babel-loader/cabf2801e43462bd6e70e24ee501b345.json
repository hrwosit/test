{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Neha\\\\mobile1\\\\src\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { Input, Button } from 'react-native-elements';\nimport PropTypes from 'prop-types';\nimport { login } from \"../modules/auth/auth.service\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10\n  },\n  input: {\n    borderBottomWidth: 0,\n    marginBottom: 10,\n    borderRadius: 2,\n    paddingVertical: 5,\n    width: '100%'\n  },\n  placeholder: {\n    fontSize: 12\n  },\n  errorMessage: {\n    marginTop: 40\n  }\n});\n\nvar renderEmail = function renderEmail(_ref) {\n  var _ref$input = _ref.input,\n      onChange = _ref$input.onChange,\n      restInput = _objectWithoutProperties(_ref$input, [\"onChange\"]);\n\n  return React.createElement(Input, _extends({\n    testID: \"email\",\n    placeholder: \"Email\",\n    inputContainerStyle: styles.input,\n    inputStyle: styles.placeholder,\n    onChangeText: onChange\n  }, restInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n};\n\nrenderEmail.propTypes = {\n  input: PropTypes.shape({}).isRequired\n};\n\nvar renderPassword = function renderPassword(_ref2) {\n  var _ref2$input = _ref2.input,\n      onChange = _ref2$input.onChange,\n      restInput = _objectWithoutProperties(_ref2$input, [\"onChange\"]);\n\n  return React.createElement(Input, _extends({\n    testID: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    inputContainerStyle: styles.input,\n    inputStyle: styles.placeholder,\n    onChangeText: onChange,\n    secureTextEntry: true\n  }, restInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};\n\nrenderPassword.propTypes = {\n  input: PropTypes.shape({}).isRequired\n};\n\nvar SignInScreen = function (_React$Component) {\n  _inherits(SignInScreen, _React$Component);\n\n  var _super = _createSuper(SignInScreen);\n\n  function SignInScreen() {\n    _classCallCheck(this, SignInScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SignInScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          dispatchLogin = _this$props.dispatchLogin,\n          errorMessage = _this$props.errorMessage;\n\n      var submitForm = function submitForm(e) {\n        dispatchLogin(e.email, e.password);\n      };\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, React.createElement(Field, {\n        name: \"email\",\n        component: renderEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }), React.createElement(Field, {\n        name: \"password\",\n        component: renderPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, errorMessage)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        testID: \"login\",\n        onPress: handleSubmit(submitForm),\n        title: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return SignInScreen;\n}(React.Component);\n\nSignInScreen.navigationOptions = {\n  header: null\n};\nSignInScreen.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  dispatchLogin: PropTypes.func.isRequired,\n  errorMessage: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(store) {\n  return {\n    errorMessage: store.auth.loginError,\n    loggedIn: store.auth.loggedIn,\n    authToken: store.auth.authToken\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    dispatchLogin: function dispatchLogin(email, password) {\n      dispatch(login(email, password)).then(function () {\n        ownProps.navigation.navigate('App');\n      });\n    }\n  };\n}\n\nvar LoginConnect = connect(mapStateToProps, mapDispatchToProps)(SignInScreen);\nexport default reduxForm({\n  form: 'loginForm'\n})(LoginConnect);","map":{"version":3,"sources":["C:/Users/Neha/mobile1/src/Login.js"],"names":["React","connect","reduxForm","Field","Input","Button","PropTypes","login","styles","StyleSheet","create","container","flex","flexDirection","justifyContent","alignItems","padding","input","borderBottomWidth","marginBottom","borderRadius","paddingVertical","width","placeholder","fontSize","errorMessage","marginTop","renderEmail","onChange","restInput","propTypes","shape","isRequired","renderPassword","SignInScreen","props","handleSubmit","dispatchLogin","submitForm","e","email","password","Component","navigationOptions","header","func","bool","mapStateToProps","store","auth","loginError","loggedIn","authToken","mapDispatchToProps","dispatch","ownProps","then","navigation","navigate","LoginConnect","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, Button } from 'react-native-elements';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../modules/auth/auth.service';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        borderBottomWidth: 0,\r\n        marginBottom: 10,\r\n        borderRadius: 2,\r\n        paddingVertical: 5,\r\n        width: '100%',\r\n    },\r\n    placeholder: {\r\n        fontSize: 12,\r\n    },\r\n    errorMessage: {\r\n        marginTop: 40,\r\n    },\r\n});\r\n\r\nconst renderEmail = ({ input: { onChange, ...restInput } }) => {\r\n    return (\r\n        <Input\r\n            testID=\"email\"\r\n            placeholder=\"Email\"\r\n            inputContainerStyle={styles.input}\r\n            inputStyle={styles.placeholder}\r\n            onChangeText={onChange}\r\n            {...restInput}\r\n        />\r\n    );\r\n};\r\n\r\nrenderEmail.propTypes = {\r\n    input: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nconst renderPassword = ({ input: { onChange, ...restInput } }) => {\r\n    return (\r\n        <Input\r\n            testID=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            inputContainerStyle={styles.input}\r\n            inputStyle={styles.placeholder}\r\n            onChangeText={onChange}\r\n            secureTextEntry\r\n            {...restInput}\r\n        />\r\n    );\r\n};\r\n\r\nrenderPassword.propTypes = {\r\n    input: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nclass SignInScreen extends React.Component {\r\n    static navigationOptions = {\r\n        header: null,\r\n    };\r\n\r\n    render() {\r\n        const { handleSubmit, dispatchLogin, errorMessage } = this.props;\r\n        const submitForm = e => {\r\n            dispatchLogin(e.email, e.password);\r\n        };\r\n        return (\r\n            <View style={styles.container}>\r\n                <Field name=\"email\" component={renderEmail} />\r\n                <Field name=\"password\" component={renderPassword} />\r\n\r\n                <View>\r\n                    <Text>{errorMessage}</Text>\r\n                </View>\r\n                <View>\r\n                    <Button testID=\"login\" onPress={handleSubmit(submitForm)} title=\"Login\" />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nSignInScreen.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    dispatchLogin: PropTypes.func.isRequired,\r\n    errorMessage: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(store) {\r\n    return {\r\n        errorMessage: store.auth.loginError,\r\n        loggedIn: store.auth.loggedIn,\r\n        authToken: store.auth.authToken,\r\n    };\r\n}\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n    return {\r\n        dispatchLogin: (email, password) => {\r\n            dispatch(login(email, password)).then(() => {\r\n                ownProps.navigation.navigate('App');\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nconst LoginConnect = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignInScreen);\r\n\r\nexport default reduxForm({\r\n    form: 'loginForm',\r\n})(LoginConnect);"]},"metadata":{},"sourceType":"module"}