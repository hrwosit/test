{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Neha\\\\mobile1\\\\src\\\\Flat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport GridList from 'react-native-grid-list';\n\nvar Flat = function (_PureComponent) {\n  _inherits(Flat, _PureComponent);\n\n  var _super = _createSuper(Flat);\n\n  function Flat() {\n    var _this;\n\n    _classCallCheck(this, Flat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderItemAnimationAndSeparator = function (_ref) {\n      var item = _ref.item,\n          animation = _ref.animation;\n      return React.createElement(Image, {\n        style: styles.imageRadius,\n        source: item.thumbnail,\n        onLoad: function onLoad() {\n          return animation.start();\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this.renderItemAnimation = function (_ref2) {\n      var item = _ref2.item,\n          animation = _ref2.animation;\n      return React.createElement(Image, {\n        style: styles.image,\n        source: item.thumbnail,\n        onLoad: function onLoad() {\n          return animation.start();\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this.renderItemSeparator = function (_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Image, {\n        style: styles.image,\n        source: item.thumbnail,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 5\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Flat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        showsVerticalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, \"Separator and animation when loading\"), React.createElement(View, {\n        style: styles.girdAnimationAndSeparator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, React.createElement(GridList, {\n        showAnimation: true,\n        showSeparator: true,\n        data: itemsAnimationAndSeparator,\n        numColumns: 3,\n        renderItem: this.renderItemAnimationAndSeparator,\n        separatorBorderWidth: 10,\n        separatorBorderColor: 'black',\n        animationInitialBackgroundColor: 'white',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, \"Animation when loading\"), React.createElement(View, {\n        style: styles.girdAnimation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, React.createElement(GridList, {\n        showAnimation: true,\n        data: itemsAnimation,\n        numColumns: 4,\n        renderItem: this.renderItemAnimation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, \"Separator\"), React.createElement(View, {\n        style: styles.girdSeparator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(GridList, {\n        showSeparator: true,\n        data: itemsSeparator,\n        numColumns: 2,\n        renderItem: this.renderItemSeparator,\n        separatorBorderWidth: 25,\n        separatorBorderColor: 'white',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Flat;\n}(PureComponent);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: '5%'\n  },\n  girdAnimationAndSeparator: {\n    backgroundColor: 'black'\n  },\n  girdAnimation: {\n    backgroundColor: 'tomato'\n  },\n  girdSeparator: {\n    borderWidth: 1\n  },\n  imageRadius: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  }\n});\nvar newImage = {\n  0: 'business',\n  1: 'cats',\n  2: 'city',\n  3: 'food',\n  4: 'nightlife',\n  5: 'fashion',\n  6: 'people',\n  7: 'nature',\n  8: 'animals',\n  9: 'imageUrl'\n};\n\nvar image = function image(index) {\n  return {\n    thumbnail: {\n      uri: \"https://lorempixel.com/200/200/\" + newImage[index % (Object.keys(newImage).length - 1)]\n    }\n  };\n};\n\nvar itemsAnimationAndSeparator = Array.from(Array(5)).map(function (_, index) {\n  return image(index);\n});\nvar itemsAnimation = Array.from(Array(6)).map(function (_, index) {\n  return image(index);\n});\nvar itemsSeparator = Array.from(Array(4)).map(function (_, index) {\n  return image(index);\n});\nexport default Flat;","map":{"version":3,"sources":["C:/Users/Neha/mobile1/src/Flat.js"],"names":["React","PureComponent","GridList","Flat","renderItemAnimationAndSeparator","item","animation","styles","imageRadius","thumbnail","start","renderItemAnimation","image","renderItemSeparator","container","girdAnimationAndSeparator","itemsAnimationAndSeparator","girdAnimation","itemsAnimation","girdSeparator","itemsSeparator","StyleSheet","create","flex","margin","backgroundColor","borderWidth","width","height","borderRadius","newImage","index","uri","Object","keys","length","Array","from","map","_"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Text, ScrollView, Image, StyleSheet, View } from 'react-native';\r\nimport GridList from 'react-native-grid-list';\r\n\r\n class Flat extends PureComponent {\r\n  renderItemAnimationAndSeparator = ({ item, animation }) => (\r\n    <Image\r\n      style={styles.imageRadius}\r\n      source={item.thumbnail}\r\n      onLoad={() => animation.start()}\r\n    />\r\n  );\r\n  renderItemAnimation = ({ item, animation }) => (\r\n    <Image\r\n      style={styles.image}\r\n      source={item.thumbnail}\r\n      onLoad={() => animation.start()}\r\n    />\r\n  );\r\n  renderItemSeparator = ({ item }) => (\r\n    <Image style={styles.image} source={item.thumbnail} />\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>\r\n        {/* AnimationAndSeparator */}\r\n        <Text>Separator and animation when loading</Text>\r\n        <View style={styles.girdAnimationAndSeparator}>\r\n          <GridList\r\n            showAnimation\r\n            showSeparator\r\n            data={itemsAnimationAndSeparator}\r\n            numColumns={3}\r\n            renderItem={this.renderItemAnimationAndSeparator}\r\n            separatorBorderWidth={10}\r\n            separatorBorderColor={'black'}\r\n            animationInitialBackgroundColor={'white'}\r\n          />\r\n        </View>\r\n\r\n        {/* Animation */}\r\n        <Text>Animation when loading</Text>\r\n        <View style={styles.girdAnimation}>\r\n          <GridList\r\n            showAnimation\r\n            data={itemsAnimation}\r\n            numColumns={4}\r\n            renderItem={this.renderItemAnimation}\r\n          />\r\n        </View>\r\n\r\n        {/* Separator */}\r\n        <Text>Separator</Text>\r\n        <View style={styles.girdSeparator}>\r\n          <GridList\r\n            showSeparator\r\n            data={itemsSeparator}\r\n            numColumns={2}\r\n            renderItem={this.renderItemSeparator}\r\n            separatorBorderWidth={25}\r\n            separatorBorderColor={'white'}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    margin: '5%',\r\n  },\r\n  girdAnimationAndSeparator: {\r\n    backgroundColor: 'black',\r\n  },\r\n  girdAnimation: {\r\n    backgroundColor: 'tomato',\r\n  },\r\n  girdSeparator: {\r\n    borderWidth: 1,\r\n  },\r\n  imageRadius: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 10,\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n});\r\n\r\nconst newImage = {\r\n  0: 'business',\r\n  1: 'cats',\r\n  2: 'city',\r\n  3: 'food',\r\n  4: 'nightlife',\r\n  5: 'fashion',\r\n  6: 'people',\r\n  7: 'nature',\r\n  8: 'animals',\r\n  9: 'imageUrl',\r\n};\r\n\r\nconst image = index => ({\r\n  thumbnail: {\r\n    uri: `https://lorempixel.com/200/200/${\r\n      newImage[index % (Object.keys(newImage).length - 1)]\r\n    }`,\r\n  },\r\n});\r\n\r\nconst itemsAnimationAndSeparator = Array.from(Array(5)).map((_, index) =>\r\n  image(index),\r\n);\r\nconst itemsAnimation = Array.from(Array(6)).map((_, index) => image(index));\r\nconst itemsSeparator = Array.from(Array(4)).map((_, index) => image(index));\r\n\r\nexport default Flat;"]},"metadata":{},"sourceType":"module"}